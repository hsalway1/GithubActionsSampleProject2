name: Android emulator
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    
env:
  ANDROID_ARCH: x86_64
  ANDROID_TARGET: google_apis_playstore
  API_LEVEL: 30
  ANDROID_BUILD_TOOLS_VERSION: 33.0.2
  ANDROID_SDK_PACKAGES: system-images;android-33;google_apis_playstore;x86_64 platforms;android-33 build-tools;33.0.2 platform-tools emulator
  EMULATOR_TIMEOUT: 350
  EMULATOR_NAME: nexus

jobs:
  playwright-emulator:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install system image
        run: sdkmanager --install 'system-images;android-30;google_apis_playstore;x86_64'

      - name: setting up env path
        run: echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.2" >> $GITHUB_PATH

      - name: Create emulator
        run: echo no | avdmanager create avd -n TestAVD -k "system-images;android-30;google_apis_playstore;x86_64" -p $ANDROID_HOME/mid/avd
      
      - name: Accept licenses
        run: yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses

      - name: Start emulator
        run: emulator -avd TestAVD -no-skin -no-audio -no-window &

      - name: List of emulators
        run: avdmanager list avd

      - name: Wait for emulator to launch
        run: |
          function check_emulator_status () {
            printf "${G}==> ${BL}Checking emulator booting up status 🧐${NC}\n"
            start_time=$(date +%s)
            spinner=( "⠹" "⠺" "⠼" "⠶" "⠦" "⠧" "⠇" "⠏" )
            i=0
            # Get the timeout value from the environment variable or use the default value of 300 seconds (5 minutes)
            timeout=${EMULATOR_TIMEOUT:-300}
          
            while true; do
              result=$(adb shell getprop sys.boot_completed 2>&1)
          
              if [ "$result" == "1" ]; then
                printf "\e[K${G}==> \u2713 Emulator is ready : '$result'           ${NC}\n"
                adb devices -l
                adb shell input keyevent 82
                break
              elif [ "$result" == "" ]; then
                printf "${YE}==> Emulator is partially Booted! 😕 ${spinner[$i]} ${NC}\r"
              else
                printf "${RED}==> $result, please wait ${spinner[$i]} ${NC}\r"
                i=$(( (i+1) % 8 ))
              fi
          
              current_time=$(date +%s)
              elapsed_time=$((current_time - start_time))
              if [ $elapsed_time -gt $timeout ]; then
                printf "${RED}==> Timeout after ${timeout} seconds elapsed 🕛.. ${NC}\n"
                break
              fi
              sleep 4
            done
          };

          check_emulator_status

      - name: Print processes
        run: adb shell top
